{"version":3,"sources":["Beeper.js","App.js","reportWebVitals.js","index.js"],"names":["BEEPS","ERROR","Beeper","beep","time","volume","sound","beepTime","beepVolume","beepSound","oscillatorNode","audioContext","createOscillator","gainNode","createGain","connect","frequency","value","destination","gain","start","currentTime","stop","Promise","resolve","setTimeout","pause","pauseTime","vibrate","pattern","vibrationPattern","vibrationTime","reduce","accTime","window","navigator","AudioContext","webkitAudioContext","this","props","children","React","Component","i18n","str","Button","className","Container","style","display","flexDirection","alignItems","flex","Reference","button","App","useState","view","changeView","renderDemo","onClick","a","renderAlertsBeeps","size","renderBasicBeeps","renderCombinedBeeps","map","renderSoundBeeps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6a5298d.chunk.js","sourcesContent":["import React from 'react'\n\nconst BEEPS = {\n  ERROR: 1200,\n};\n\nclass Beeper extends React.Component {\n\n  constructor() {\n    super();\n\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.audioContext = new AudioContext();\n  }\n\n  beep = ({ time, volume, sound } = {}) => {\n    const beepTime = time || 300;\n    const beepVolume = volume || 0.5;\n    const beepSound = sound || BEEPS.ERROR;\n    const oscillatorNode = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n\n    oscillatorNode.connect(gainNode);\n    oscillatorNode.frequency.value = beepSound;\n    gainNode.connect(this.audioContext.destination);\n    gainNode.gain.value = beepVolume;\n    oscillatorNode.start(this.audioContext.currentTime);\n    oscillatorNode.stop(this.audioContext.currentTime + (beepTime * 0.001));\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, beepTime)\n    })\n  };\n\n  pause = ({ time } = {}) => {\n    const pauseTime = time || 500;\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, pauseTime)\n    })\n  }\n\n  vibrate = ({ pattern } = {}) => {\n    const vibrationPattern = pattern || [ 2000 ];\n    const vibrationTime = vibrationPattern.reduce((time, accTime ) => {\n      return accTime + time\n    }, 0 )\n\n    window.navigator.vibrate(vibrationPattern);\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, vibrationTime)\n    })\n  };\n\n  render() {\n    return this.props.children({\n      beep: this.beep,\n      pause: this.pause,\n      vibrate: this.vibrate\n    })\n  }\n};\n\nBeeper.BEEPS = BEEPS;\n\nexport default Beeper\n","import { useState } from 'react'\nimport Beeper from './Beeper';\nimport './App.css';\n\nconst i18n = {\n  gettext: (str) => str\n}\n\nconst Button = (props) => {\n  return (\n    <button {...props} className=\"button\">{props.children}</button>\n  )\n}\n\nconst Container = (props) => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', flex: 1 }}>\n      {props.children}\n    </div>\n  )\n}\n\nconst Reference = (props) => (\n  <div className=\"reference\">\n    {props.button}\n    <div className=\"reference-text\">{props.children}</div>\n  </div>\n)\n\nfunction App() {\n  const [view, changeView] = useState('demo')\n\n  const renderDemo = (beep, pause, vibrate) => {\n    return (\n      <Container>\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [1600] })\n                await beep({ time: 1600, volume: 1, sound: 1200 })\n              }}\n            >\n              Errores y Alertas (config actual)\n            </Button>\n          }\n        >\n          <p> Vibración: 1600ms </p>\n          <p> Beep: 1600ms, vol 1, freq 1200 </p>\n        </Reference>\n      </Container>\n    )\n  }\n\n  const renderBasicBeeps = (beep, pause, vibrate) => {\n    return (\n      <Container>\n        <Button\n          onClick={beep}\n          size=\"large\"\n        >\n          {i18n.gettext('Beep 1: 300ms, volume: 0.5')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => beep({ time: 1000 })}\n          size=\"large\"\n        >\n          {i18n.gettext('Beep 2: 1000ms, volume: 0.5')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => beep({ time: 2000 })}\n          size=\"large\"\n        >\n          {i18n.gettext('Beep 3: 2000ms, volume: 0.5')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => beep({ volume: 1 })}\n          size=\"large\"\n        >\n          {i18n.gettext('Beep 4: 300ms, volume 1')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => beep({ volume: 1, sound: 2000 })}\n          size=\"large\"\n        >\n          {i18n.gettext('Beep 5: 300ms, volume 0.5 - sound frequency: 2000')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => beep({ volume: 1, sound: 3000 })}\n          size=\"large\"\n        >\n          {i18n.gettext('Beep 6: 300ms, volume 0.5 - sound frequency: 3000')}\n        </Button>\n        <br />\n        <Button\n          onClick={vibrate}\n          size=\"large\"\n        >\n          {i18n.gettext('Vibración 1: 1000ms')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => vibrate({ pattern: [200, 500, 200] })}\n          size=\"large\"\n        >\n          {i18n.gettext('Vibración 2: 200ms, 200ms')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => vibrate({ pattern: [1000, 500, 1500] })}\n          size=\"large\"\n        >\n          {i18n.gettext('Vibración 3: 1000ms, 1500ms')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => {\n            beep({ time: 2000 })\n            vibrate({ pattern: [800, 400, 800] })\n          }}\n          size=\"large\"\n        >\n          {i18n.gettext('Combined 1: 2000ms - 2 vibraciones')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => {\n            beep({ time: 2000 })\n            vibrate({ pattern: [2000] })\n          }}\n          size=\"large\"\n        >\n          {i18n.gettext('Combined 2: 2000ms - 1 vibracion')}\n        </Button>\n        <br />\n        <Button\n          onClick={() => {\n            beep({ time: 2000 })\n            vibrate({ pattern: [500, 250, 500, 250, 500] })\n          }}\n          size=\"large\"\n        >\n          {i18n.gettext('Combined 3: 2000ms - 3 vibraciones')}\n        </Button>\n      </Container>\n    )\n  }\n\n  const renderCombinedBeeps = (beep, pause, vibrate) => {\n    return (\n      <Container>\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [2000] })\n                await beep({ time: 300, })\n                await pause({ time: 75 })\n                await beep({ time: 300, })\n              }}\n            >\n              1 vbr + 2 beeps (2000ms)\n            </Button>\n          }\n        >\n          <p> Vibrate: 2000ms  </p>\n          <p> Beep: 300ms  </p>\n          <p> Pause: 75ms  </p>\n          <p> Beep: 300ms  </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [1000] })\n                await beep({ time: 400, })\n                await pause({ time: 200 })\n                await beep({ time: 400,  })\n              }}\n            >\n              1 vbr + 2 beeps (1000ms)\n            </Button>\n          }\n        >\n          <p> Vibrate: 1000ms  </p>\n          <p> Beep: 400ms  </p>\n          <p> Pause: 200ms  </p>\n          <p> Beep: 400ms  </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [1500] })\n                await beep({ time: 650, })\n                await pause({ time: 200 })\n                await beep({ time: 650,  })\n              }}\n            >\n              1 vbr + 2 beeps (1500ms)\n            </Button>\n          }\n        >\n          <p> Vibrate: 1500ms  </p>\n          <p> Beep: 650ms  </p>\n          <p> Pause: 200ms  </p>\n          <p> Beep: 650ms  </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                beep({ time: 2000, })\n                vibrate({ pattern: [800, 400, 800] })\n              }}\n            >\n              2 vbr + 1 beep (2000ms)\n            </Button>\n          }\n        >\n          <p> Beep: 2000ms  </p>\n          <p> Vibrate: 800ms  </p>\n          <p> Pause: 400ms  </p>\n          <p> Vibrate: 800ms  </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                beep({ time: 1500, })\n                vibrate({ pattern: [650, 200, 650] })\n              }}\n            >\n              2 vbr + 1 beep (1500ms)\n            </Button>\n          }\n        >\n          <p> Beep: 1500ms  </p>\n          <p> Vibrate: 650ms  </p>\n          <p> Pause: 200ms  </p>\n          <p> Vibrate: 650ms  </p>\n        </Reference>\n\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                beep({ time: 1000, })\n                vibrate({ pattern: [450, 100, 450] })\n              }}\n            >\n              2 vbr + 1 beep (1000ms)\n            </Button>\n          }\n        >\n          <p> Beep: 1500ms  </p>\n          <p> Vibrate: 650ms  </p>\n          <p> Pause: 200ms  </p>\n          <p> Vibrate: 650ms  </p>\n        </Reference>\n      </Container>\n    )\n  }\n\n  const renderAlertsBeeps = (beep, pause, vibrate) => {\n    return (\n      <Container>\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [200, 75, 200] })\n                await beep({ time: 200, volume: 1, sound: 1500 })\n                await pause({ time: 75 })\n                await beep({ time: 200, volume: 1, sound: 1500 })\n              }}\n            >\n              Combinación 1\n            </Button>\n          }\n        >\n          <p> Vibrate: 200ms, 200ms  </p>\n          <p> Beep: 200ms, vol 1, freq 1500 </p>\n          <p> Pause: 75ms  </p>\n          <p> Beep: 200ms, vol 1, freq 1500 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [200, 75, 320] })\n                await beep({ time: 200, volume: 0.5, sound: 1200 })\n                await pause({ time: 75 })\n                await beep({ time: 320, volume: 1, sound: 3500 })\n              }}\n            >\n              Combinación 2\n            </Button>\n          }\n        >\n          <p> Vibrate: 200ms, 320ms  </p>\n          <p> Beep: 200ms, vol 0.5, freq 1200 </p>\n          <p> Pause: 75ms  </p>\n          <p> Beep: 320ms, vol 1, freq 3500 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [200, 75, 320] })\n                await beep({ time: 250, volume: 0.5, sound: 1000 })\n                await pause({ time: 75 })\n                await beep({ time: 400, volume: 1, sound: 3500 })\n              }}\n            >\n              Combinación 3\n            </Button>\n          }\n        >\n          <p> Vibrate: 200ms, 320ms  </p>\n          <p> Beep: 250ms, vol 0.5, freq 1000 </p>\n          <p> Pause: 75ms  </p>\n          <p> Beep: 400ms, vol 1, freq 3500 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [800, 400, 800] })\n                beep({ time: 2000, volume: 1, sound: 2800 })\n              }}\n            >\n              Combinación 4 - erros\n            </Button>\n          }\n        >\n          <p> Vibrate: 800ms, (pause 400ms) 800ms  </p>\n          <p> Beep: 2000ms, vol 1, freq 2800 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [1650] })\n                await beep({ time: 650, volume: 1, sound: 2600 })\n                await pause({ time: 200 })\n                await beep({ time: 800, volume: 1, sound: 2800 })\n              }}\n            >\n              Combinación 5 - Atenção (Telas laranja)\n            </Button>\n          }\n        >\n          <p> Vibrate: 1650ms </p>\n          <p> Beep: 650ms, vol 1, freq 2600 </p>\n          <p> Pause: 200ms </p>\n          <p> Beep: 800ms, vol 1, freq 2800 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [1850] })\n                await beep({ time: 400, volume: 1, sound: 1600 })\n                await pause({ time: 200 })\n                await beep({ time: 400, volume: 1, sound: 1600 })\n                await pause({ time: 200 })\n                await beep({ time: 650, volume: 1, sound: 1600 })\n              }}\n            >\n              Combinación 6 - 3 beeps\n            </Button>\n          }\n        >\n          <p> Vibrate: 1850ms </p>\n          <p> Beep: 400ms, vol 1, freq 1600 </p>\n          <p> Pause: 200ms </p>\n          <p> Beep: 400ms, vol 1, freq 1600 </p>\n          <p> Pause: 200ms </p>\n          <p> Beep: 650ms, vol 1, freq 1600 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [1850] })\n                await beep({ time: 450, volume: 1, sound: 1600 })\n                await pause({ time: 150 })\n                await beep({ time: 450, volume: 1, sound: 1600 })\n                await pause({ time: 150 })\n                await beep({ time: 650, volume: 1, sound: 1600 })\n              }}\n            >\n              Combinación 6 B - 3 beeps (pause 150ms)\n            </Button>\n          }\n        >\n          <p> Vibrate: 1850ms </p>\n          <p> Beep: 450ms, vol 1, freq 1600 </p>\n          <p> Pause: 150ms </p>\n          <p> Beep: 450ms, vol 1, freq 1600 </p>\n          <p> Pause: 150ms </p>\n          <p> Beep: 650ms, vol 1, freq 1600 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [650, 200, 650] })\n                await beep({ time: 1500, volume: 1, sound: 1600 })\n              }}\n            >\n              Combinación 7 - 2 vibr curtas\n            </Button>\n          }\n        >\n          <p> Vibrate: 650ms, (pause 200), 650ms </p>\n          <p> Beep: 1500ms, vol 1, freq 1600 </p>\n        </Reference>\n\n        <Reference\n          button={\n            <Button\n              onClick={async () => {\n                vibrate({ pattern: [675, 150, 675] })\n                await beep({ time: 1500, volume: 1, sound: 1600 })\n              }}\n            >\n              Combinación 7 B - 2 vibr curtas (pause 150)\n            </Button>\n          }\n        >\n          <p> Vibrate: 675ms, (pause 150), 675ms </p>\n          <p> Beep: 1500ms, vol 1, freq 1600 </p>\n        </Reference>\n      </Container>\n    )\n  }\n\n  const renderSoundBeeps = (beep, pause, vibrate) => {\n    const frequencies = [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400, 2429, 2600, 2800, 3000, 3200, 3400, 3600, 3800, 4000]\n\n    return (\n      <Container>\n        {frequencies.map(sound => (\n          <Reference\n            button={\n              <Button\n                onClick={() => beep({ time: 1000, sound: sound  })}\n              >\n                Beep {sound} Mhz\n              </Button>\n            }\n          >\n          </Reference>\n        ))}\n      </Container>\n    )\n  }\n\n  const renderOptions = () => {\n    return (\n      <div className=\"options-container\">\n        <Button onClick={() => changeView('demo')}> Demo - Config Actual </Button>\n        <Button onClick={() => changeView('alerts')}> Test de alertas </Button>\n        <Button onClick={() => changeView('combined')}> Vibrate + Beep </Button>\n        <Button onClick={() => changeView('sound')}> Beep - muestra de frecuencias  </Button>\n        {/*<Button onClick={() => changeView('basic')}> Basic Examples </Button>*/}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {renderOptions()}\n        <Beeper>\n          { ({ beep, pause, vibrate }) => {\n\n            if (view === 'demo' ) {\n              return (\n                <div style={{flex: 1}}>\n                  {renderDemo(beep, pause, vibrate)}\n                </div>\n              )\n            }\n\n            if (view === 'alerts') {\n              return renderAlertsBeeps(beep, pause, vibrate)\n            }\n            if (view === 'basic') {\n              return renderBasicBeeps(beep, pause, vibrate)\n            }\n\n            if (view === 'combined') {\n              return renderCombinedBeeps(beep, pause, vibrate)\n            }\n\n            if (view === 'sound') {\n              return renderSoundBeeps(beep, pause, vibrate)\n            }\n\n            return null\n          }}\n        </Beeper>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}